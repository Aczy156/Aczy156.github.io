<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Aczy156的模版 on Aczy156</title>
    <link>http://chenranfei.xyz/categories/aczy156%E7%9A%84%E6%A8%A1%E7%89%88/</link>
    <description>Recent content in Aczy156的模版 on Aczy156</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© Aczy156</copyright>
    <lastBuildDate>Mon, 01 Feb 2021 19:03:55 +0800</lastBuildDate>
    
	<atom:link href="http://chenranfei.xyz/categories/aczy156%E7%9A%84%E6%A8%A1%E7%89%88/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Summary1.2 数据结构 STL整合</title>
      <link>http://chenranfei.xyz/posts/acm-summary/summary1.2-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-stl%E6%95%B4%E5%90%88/</link>
      <pubDate>Mon, 01 Feb 2021 19:03:55 +0800</pubDate>
      
      <guid>http://chenranfei.xyz/posts/acm-summary/summary1.2-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-stl%E6%95%B4%E5%90%88/</guid>
      <description>[TOC]
数据结构 STL 用法整合 linklist 链表
#include &amp;lt;list&amp;gt; list&amp;lt;int&amp;gt; linklist; int main() { // 往链表头部插入元素  linklist.push_front(2); // 2  linklist.push_front(1); // 1 2  // 往链表尾部插入元素  linklist.push_back(3); // 1 2 3  // 链表排序  linklist.sort(); // 链表去重  linklist.unique(); // 链表长度 	int linklistlen = linklist.size(); } map 功能：映射。
性质：有序性=&amp;gt;根据key有序排列，唯一性=&amp;gt;根据key唯一。
// 功能描述 =&amp;gt; 查找出现单次的,并尽可能的节省空间 #include &amp;lt;map&amp;gt; map&amp;lt;int, bool&amp;gt; m; // map两种遍历方式 // map利用迭代器进行遍历，需要设置迭代器并且指向对应的map map&amp;lt;int, bool&amp;gt;::iterator iter = m.</description>
    </item>
    
  </channel>
</rss>