<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>数学 on Aczy156</title>
    <link>https://www.skyzh.dev/categories/%E6%95%B0%E5%AD%A6/</link>
    <description>Recent content in 数学 on Aczy156</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© Aczy156</copyright>
    <lastBuildDate>Mon, 01 Feb 2021 19:03:55 +0800</lastBuildDate>
    
	<atom:link href="https://www.skyzh.dev/categories/%E6%95%B0%E5%AD%A6/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Algorithm16 高精度&amp;大数运算</title>
      <link>https://www.skyzh.dev/posts/acm/algorithm16-%E9%AB%98%E7%B2%BE%E5%BA%A6%E5%A4%A7%E6%95%B0%E8%BF%90%E7%AE%97/</link>
      <pubDate>Mon, 01 Feb 2021 19:03:55 +0800</pubDate>
      
      <guid>https://www.skyzh.dev/posts/acm/algorithm16-%E9%AB%98%E7%B2%BE%E5%BA%A6%E5%A4%A7%E6%95%B0%E8%BF%90%E7%AE%97/</guid>
      <description>高精度 &amp;amp; 大数运算 （一）高精度除法-高精度除低精度 &amp;lt; 高精度加法 &amp;lt; 高精度乘法 &amp;lt; 高精度减法 &amp;lt; 高精度除法-高精度除高精度
（二）语言：python，Java的四则运算自带高精度；C/C++需要利用字符串/字符数组来读取大数并开数组存放然后通过模拟竖式运算来计算。
大数加法 https://www.luogu.com.cn/problem/P1601
1、读入用字符数组读入。
2、做加法通过考虑进位位。
3、输出的时候特判进位位是否需要单独输出
#include &amp;lt;iostream&amp;gt;using namespace std; #define maxn 100005char sa[maxn], sb[maxn]; int a[maxn], b[maxn], ans[maxn], lena, lenb ,lenans, ap; #include &amp;lt;cmath&amp;gt;#include &amp;lt;string.h&amp;gt; void read() { lena = strlen(sa);lenb = strlen(sb); lenans = max(lena, lenb); for (int i = 0; i &amp;lt; lena; ++i) a[i] = sa[lena-1-i] - &amp;#39;0&amp;#39;; for (int i = 0; i &amp;lt; lenb; ++i) b[i] = sb[lenb-1-i] - &amp;#39;0&amp;#39;; } void add(int a[], int b[]) { for (int i = 0; i &amp;lt; lenans; ++i) { ans[i] = a[i]+b[i]+ap; ap = ans[i]/10; ans[i]%=10; } } void write() { if (ap) printf(&amp;#34;%d&amp;#34;, ap); for (int i = lenans-1; i &amp;gt;= 0; --i) printf(&amp;#34;%d&amp;#34;, ans[i]); } int main() { scanf(&amp;#34;%s%s&amp;#34;, sa, sb); read(); add(a, b); write(); return 0; } 大数减法 https://www.</description>
    </item>
    
    <item>
      <title>Algorithm9 数论其他汇总</title>
      <link>https://www.skyzh.dev/posts/acm/algorithm9-%E6%95%B0%E8%AE%BA%E5%85%B6%E4%BB%96%E6%B1%87%E6%80%BB/</link>
      <pubDate>Mon, 01 Feb 2021 19:03:55 +0800</pubDate>
      
      <guid>https://www.skyzh.dev/posts/acm/algorithm9-%E6%95%B0%E8%AE%BA%E5%85%B6%E4%BB%96%E6%B1%87%E6%80%BB/</guid>
      <description>数论其他汇总 约数问题 https://www.luogu.com.cn/problem/P1403
题目大意：给定一个数n，求1～n的所有数各自的约数的数量总和。</description>
    </item>
    
    <item>
      <title>Algorithm9.1 数论 数学基础</title>
      <link>https://www.skyzh.dev/posts/acm/algorithm9.1-%E6%95%B0%E8%AE%BA%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Mon, 01 Feb 2021 19:03:55 +0800</pubDate>
      
      <guid>https://www.skyzh.dev/posts/acm/algorithm9.1-%E6%95%B0%E8%AE%BA%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/</guid>
      <description>数论 数学基础 进制转换 获取唯一的奇数个的不匹配的数 &amp;amp; 找未配上的对 https://www.luogu.com.cn/problem/P1469 【注意：卡内存，卡时间】
 思路一：数组存，然后排序，然后再遍历，两个两个遍历=&amp;gt; 爆内存，爆时间。 思路二：map存，找到配对的删除。一边即过。=&amp;gt; 6个点爆内存 正确思路：直接用一个变量，然后来异或^所有的数，a^a = 0，所以最后剩下的那个数就是没匹配的。  scanf(&amp;#34;%d&amp;#34;, &amp;amp;n); for (int i = 1; i &amp;lt;= n; ++i) {scanf(&amp;#34;%d&amp;#34;, &amp;amp;t); ans ^= t;} printf(&amp;#34;%d\n&amp;#34;, ans); 获取唯一的出现偶数次数的 &amp;amp; 找配上对的 这个需要先把所有存在的数都输入进去，得到所有数的异或，然后再异或数组种的所有数，那么出现偶数次的就会显露出来了，出现单次的就会和第一次的异或掉了。
scanf(&amp;#34;%d&amp;#34;, &amp;amp;n); for (int i = 1; i &amp;lt;= n; ++i) {scanf(&amp;#34;%d&amp;#34;, &amp;amp;t);ans^=t;} scanf(&amp;#34;%d&amp;#34;, &amp;amp;m); for (int i = 1; i &amp;lt;= m; ++i) {scanf(&amp;#34;%d&amp;#34;, &amp;amp;t);ans^=t;} </description>
    </item>
    
    <item>
      <title>Algorithm9.2 数论入门</title>
      <link>https://www.skyzh.dev/posts/acm/algorithm9.2-%E6%95%B0%E8%AE%BA%E5%85%A5%E9%97%A8/</link>
      <pubDate>Mon, 01 Feb 2021 19:03:55 +0800</pubDate>
      
      <guid>https://www.skyzh.dev/posts/acm/algorithm9.2-%E6%95%B0%E8%AE%BA%E5%85%A5%E9%97%A8/</guid>
      <description>数论基础 最大公约数gcd int gcd(int a,int b) { return (b&amp;gt;0)?gcd(b, a%b):a; } 利用的就是欧几里得原理
int gcd(int a, int b) { return (b&amp;lt;=0)?a:gcd(b, a%b); } 最大公约数[gcd]与最小公倍数[gld]乘积 == 这两个数的乘积 a*b = gcd(a, b)*gld()
最小公倍数[gld] 可以利用最大公约数倒推回去，也就是gld(a, b)=a*b/gcd(a, b)
质数 判断1～n中的所有质数
1、基础：O(n^2)复杂度，遍历，遍历的边界从3～sqrt(x)
bool isprime(int x){ for (int i = 3; i &amp;lt;= sqrt(x); ++i) if (x%i == 0) return false; return true; } 2、埃拉托斯特尼筛：O(nlogn)复杂度
3、线性筛：O(n)
prime是质数列表，isprime
#define maxn 10000010int vis[maxn], prime[maxn], isprime[maxn]; void Prime() { for(int i=2; i&amp;lt;=b; i++) { if(!</description>
    </item>
    
  </channel>
</rss>